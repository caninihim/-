local Translations = {
    ["Aesthetic Lighting"] = "美学照明",
    ["Aura"] = "光环",
    ["All"] = "全部",
    ["Ather"] = "其他",
    ["Auto"] = "自动",
    ["Automation"] = "自动化",
    ["Bring"] = "获取",
    ["BETA"] = "测试",
    ["Search"] = "搜索",
    ["Information"] = "信息",
    ["Fun"] = "趣味",
    ["Stuff"] = "物品",
    ["Main"] = "主菜单",
    ["Fishing"] = "钓鱼",
    ["Teleport"] = "传送",
    ["Visuals"] = "视觉效果",
    ["Local"] = "本地",
    ["Misc"] = "杂项",
    ["Theme"] = "主题",
    ["Config"] = "配置",
    ["Select"] = "选择",
    ["Teleport To "] = "传送到",
    ["Refresh"] = "刷新",
    ["List"] = "列表",
    ["Structure"] = "建筑",
    ["Select"] = "选择",
    ["TP"] = "传送",
    ["Camp"] = "营地",
    ["TP to"] = "传送到",
    ["Warm Place"] = "温暖的地方",
    ["Chest"] = "宝箱",
    ["Tree"] = "树",
    ["Type"] = "类型",
    ["Small"] = "小",
    ["Chop"] = "砍伐",
    ["Range"] = "范围",
    ["Saplings"] = "树苗",
    ["Plant"] = "种植",
    ["Chop Status Visualiser"] = "砍伐状态可视化",
    ["Eat"] = "吃",
    ["Gears"] = "齿轮",
    ["Guns & Armor"] = "枪支和护甲",
    ["Others"] = "其他物品",
    ["Diamond"] = "钻石",
    ["Height"] = "获取高度",
    ["Fuel"] = "燃料",
    ["Logs "] = "日志",
    ["Food & Healing"] = "食物和治疗物品",
    ["Flowers"] = "花",
    ["Pickup"] = "拾取",
    ["Gold Stacks"] = "金堆",
    ["Collect"] = "收集",
    ["Campfire"] = "营火",
    ["Type"] = "类型",
    ["Campfire"] = "营火",
    ["Fill"] = "填充",
    ["Start Fueling when (Fire HP)"] = "当（火焰生命值）达到时开始加燃料",
    ["Start"] = "开始",
    ["The"] = "",
    ["Entities"] = "实体",
    ["Freeze the movement of something"] = "冻结某物的移动",
    ["Freeze The Thingys"] = "冻结物品",
    ["UnFreeze The Thingys"] = "解冻物品",
    ["Settings"] = "设置",
    ["Location"] = "位置",
    ["Player"] = "玩家",
    ["Max Per Item"] = "每件物品最大数量",
    ["Cooldown"] = "冷却时间",
    ["Amount"] = "数量",
    ["Limit"] = "限制",
    ["Lighting Theme"] = "照明主题",
    ["Purple"] = "紫色",
    ["Enable Lighting Theme"] = "启用照明主题",
    ["Movement"] = "移动",
    ["Walk"] = "行走",
    ["Speed"] = "速度",
    ["Kill"] = "杀戮",
    ["Ice"] = "冰冻",
    ["Children"] = "孩子",
}

local function translateText(text)
    
    if Translations[text] then
        return Translations[text]
    end
    
    for en, cn in pairs(Translations) do
        if text:find(en) then
            return text:gsub(en, cn)
        end
    end
    
    return text
end

local function setupTranslationEngine()
    local success, err = pcall(function()
        local oldIndex = getrawmetatable(game).__newindex
        setreadonly(getrawmetatable(game), false)
        
        getrawmetatable(game).__newindex = newcclosure(function(t, k, v)
            if (t:IsA("TextLabel") or t:IsA("TextButton") or t:IsA("TextBox")) and k == "Text" then
                v = translateText(tostring(v))
            end
            return oldIndex(t, k, v)
        end)
        
        setreadonly(getrawmetatable(game), true)
    end)
    
    if not success then
        warn("元表劫持失败:", err)
       
        local translated = {}
        local function scanAndTranslate()
            for _, gui in ipairs(game:GetService("CoreGui"):GetDescendants()) do
                if (gui:IsA("TextLabel") or gui:IsA("TextButton") or gui:IsA("TextBox")) and not translated[gui] then
                    pcall(function()
                        local text = gui.Text
                        if text and text ~= "" then
                            local translatedText = translateText(text)
                            if translatedText ~= text then
                                gui.Text = translatedText
                                translated[gui] = true
                            end
                        end
                    end)
                end
            end
            
            local player = game:GetService("Players").LocalPlayer
            if player and player:FindFirstChild("PlayerGui") then
                for _, gui in ipairs(player.PlayerGui:GetDescendants()) do
                    if (gui:IsA("TextLabel") or gui:IsA("TextButton") or gui:IsA("TextBox")) and not translated[gui] then
                        pcall(function()
                            local text = gui.Text
                            if text and text ~= "" then
                                local translatedText = translateText(text)
                                if translatedText ~= text then
                                    gui.Text = translatedText
                                    translated[gui] = true
                                end
                            end
                        end)
                    end
                end
            end
        end
        
        local function setupDescendantListener(parent)
            parent.DescendantAdded:Connect(function(descendant)
                if descendant:IsA("TextLabel") or descendant:IsA("TextButton") or descendant:IsA("TextBox") then
                    task.wait(0.1)
                    pcall(function()
                        local text = descendant.Text
                        if text and text ~= "" then
                            local translatedText = translateText(text)
                            if translatedText ~= text then
                                descendant.Text = translatedText
                            end
                        end
                    end)
                end
            end)
        end
        
        pcall(setupDescendantListener, game:GetService("CoreGui"))
        local player = game:GetService("Players").LocalPlayer
        if player and player:FindFirstChild("PlayerGui") then
            pcall(setupDescendantListener, player.PlayerGui)
        end
        
        while true do
            scanAndTranslate()
            task.wait(3)
        end
    end
end

task.wait(2)

setupTranslationEngine()

local success, err = pcall(function()
--这下面填加载外部脚本
loadstring(game:HttpGet("https://raw.githubusercontent.com/caninihim/-/refs/heads/main/%E7%9C%9F%E2%80%A2%E6%B1%89%E5%8C%96%E8%99%9A%E7%A9%BA"))()


end)

if not success then
    warn("加载失败:", err)
end